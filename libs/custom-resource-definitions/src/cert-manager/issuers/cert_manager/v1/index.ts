// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
// @ts-nocheck
import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../../utilities";

// Export members:
export { IssuerArgs } from "./issuer";
export type Issuer = import("./issuer").Issuer;
export const Issuer: typeof import("./issuer").Issuer = null as any;
utilities.lazyLoad(exports, ["Issuer"], () => require("./issuer"));

export { IssuerListArgs } from "./issuerList";
export type IssuerList = import("./issuerList").IssuerList;
export const IssuerList: typeof import("./issuerList").IssuerList = null as any;
utilities.lazyLoad(exports, ["IssuerList"], () => require("./issuerList"));

export { IssuerPatchArgs } from "./issuerPatch";
export type IssuerPatch = import("./issuerPatch").IssuerPatch;
export const IssuerPatch: typeof import("./issuerPatch").IssuerPatch = null as any;
utilities.lazyLoad(exports, ["IssuerPatch"], () => require("./issuerPatch"));


const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "kubernetes:cert-manager.io/v1:Issuer":
                return new Issuer(name, <any>undefined, { urn })
            case "kubernetes:cert-manager.io/v1:IssuerList":
                return new IssuerList(name, <any>undefined, { urn })
            case "kubernetes:cert-manager.io/v1:IssuerPatch":
                return new IssuerPatch(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("certManagerIssuers", "cert-manager.io/v1", _module)
